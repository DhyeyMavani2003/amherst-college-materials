"0","# Complementary slackness example"
"0",""
"0","# Set coefficients of the objective function"
"0","f.obj <- c(-12,-9,-7)"
"0",""
"0","# Set matrix corresponding to coefficients of constraints by rows"
"0","# Assumes non-negative solutions"
"0","f.con <- matrix(c(5,1,3,"
"0","                  3,1,0),"
"0","                nrow = 2, byrow = TRUE)"
"0",""
"0","# Set inequality signs"
"0","f.dir <- c(""="",""="")"
"0",""
"0","# Set right hand side coefficients"
"0","f.rhs <- c(5,1)"
"0",""
"0","# Solution to linear program"
"0","result <- lp(""min"", f.obj, f.con, f.dir, f.rhs, compute.sens = T)"
"0",""
"0","primalsoln <- result$solution # x1 x2 x3"
"0",""
"0","optimalvalue <- result$objval"
"0",""
"0","# Given the primal solution, we can construct the dual solution"
"0","# using complementary slackness: solve 5*y1+3*y2=13, 3*y1=6 to get"
"0","# y1=2, y2=1. Check this result:"
"0",""
"0","dualsoln <- result$duals[1:2] # y1 y2"
"0",""
"0","# changing b=f.rhs should change optimal value by y1*delta_b1+y2*delta_b2"
"0","delta_b <- c(2,2)"
"0","f.rhs <- c(3,2)+delta_b"
"0","change <- lp(""min"", f.obj, f.con, f.dir, f.rhs)$objval - optimalvalue"
"0","dualsoln[1]*delta_b[1]+dualsoln[2]*delta_b[2]"
"1","[1]"
"1"," -18"
"1","
"
