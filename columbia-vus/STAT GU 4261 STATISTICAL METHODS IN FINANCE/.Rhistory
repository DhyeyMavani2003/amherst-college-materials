cat("\n")
fit_standard_t_GE <- stdFit(data$GE)
fit_skewed_t_GE <- sstdFit(data$GE)
fit_ged_GE <- gedFit(data$GE)
fit_skewed_ged_GE <- sgedFit(data$GE)
AIC_fit_standard_t_GE = 2*(fit_standard_t_GE$objective) + 2*(3)
BIC_fit_standard_t_GE = 2*(fit_standard_t_GE$objective) + (log(120))*(3)
AIC_fit_skewed_t_GE = 2*(fit_skewed_t_GE$minimum) + 2*(4)
BIC_fit_skewed_t_GE = 2*(fit_skewed_t_GE$minimum) + (log(120))*(4)
AIC_fit_ged_GE = 2*(fit_ged_GE$objective) + 2*(3)
BIC_fit_ged_GE = 2*(fit_ged_GE$objective) + (log(120))*(3)
AIC_fit_skewed_ged_GE = 2*(fit_standard_t_GE$objective) + 2*(4)
BIC_fit_skewed_ged_GE = 2*(fit_standard_t_GE$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_GE$par)
cat("\n AIC is:", AIC_fit_standard_t_GE)
cat("\n BIC is:", BIC_fit_standard_t_GE)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_GE$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_GE)
cat("\n BIC is:", BIC_fit_skewed_t_GE)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_GE$par)
cat("\n AIC is:", AIC_fit_ged_GE)
cat("\n BIC is:", BIC_fit_ged_GE)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_GE$par)
cat("\n AIC is:", AIC_fit_skewed_ged_GE)
cat("\n BIC is:", BIC_fit_skewed_ged_GE)
cat("\n")
fit_standard_t_GM <- stdFit(data$GM)
fit_skewed_t_GM <- sstdFit(data$GM)
fit_ged_GM <- gedFit(data$GM)
fit_skewed_ged_GM <- sgedFit(data$GM)
AIC_fit_standard_t_GM = 2*(fit_standard_t_GM$objective) + 2*(3)
BIC_fit_standard_t_GM = 2*(fit_standard_t_GM$objective) + (log(120))*(3)
AIC_fit_skewed_t_GM = 2*(fit_skewed_t_GM$minimum) + 2*(4)
BIC_fit_skewed_t_GM = 2*(fit_skewed_t_GM$minimum) + (log(120))*(4)
AIC_fit_ged_GM = 2*(fit_ged_GM$objective) + 2*(3)
BIC_fit_ged_GM = 2*(fit_ged_GM$objective) + (log(120))*(3)
AIC_fit_skewed_ged_GM = 2*(fit_standard_t_GM$objective) + 2*(4)
BIC_fit_skewed_ged_GM = 2*(fit_standard_t_GM$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_GM$par)
cat("\n AIC is:", AIC_fit_standard_t_GM)
cat("\n BIC is:", BIC_fit_standard_t_GM)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_GM$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_GM)
cat("\n BIC is:", BIC_fit_skewed_t_GM)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_GM$par)
cat("\n AIC is:", AIC_fit_ged_GM)
cat("\n BIC is:", BIC_fit_ged_GM)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_GM$par)
cat("\n AIC is:", AIC_fit_skewed_ged_GM)
cat("\n BIC is:", BIC_fit_skewed_ged_GM)
cat("\n")
fit_standard_t_IBM <- stdFit(data$IBM)
fit_skewed_t_IBM <- sstdFit(data$IBM)
fit_ged_IBM <- gedFit(data$IBM)
fit_skewed_ged_IBM <- sgedFit(data$IBM)
AIC_fit_standard_t_IBM = 2*(fit_standard_t_IBM$objective) + 2*(3)
BIC_fit_standard_t_IBM = 2*(fit_standard_t_IBM$objective) + (log(120))*(3)
AIC_fit_skewed_t_IBM = 2*(fit_skewed_t_IBM$minimum) + 2*(4)
BIC_fit_skewed_t_IBM = 2*(fit_skewed_t_IBM$minimum) + (log(120))*(4)
AIC_fit_ged_IBM = 2*(fit_ged_IBM$objective) + 2*(3)
BIC_fit_ged_IBM = 2*(fit_ged_IBM$objective) + (log(120))*(3)
AIC_fit_skewed_ged_IBM = 2*(fit_standard_t_IBM$objective) + 2*(4)
BIC_fit_skewed_ged_IBM = 2*(fit_standard_t_IBM$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_IBM$par)
cat("\n AIC is:", AIC_fit_standard_t_IBM)
cat("\n BIC is:", BIC_fit_standard_t_IBM)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_IBM$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_IBM)
cat("\n BIC is:", BIC_fit_skewed_t_IBM)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_IBM$par)
cat("\n AIC is:", AIC_fit_ged_IBM)
cat("\n BIC is:", BIC_fit_ged_IBM)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_IBM$par)
cat("\n AIC is:", AIC_fit_skewed_ged_IBM)
cat("\n BIC is:", BIC_fit_skewed_ged_IBM)
cat("\n")
norm.MSOFT <- fitdist(data$MSOFT, "norm") # Normal
summary(norm.MSOFT)
norm.GE <- fitdist(data$GE, "norm") # Normal
summary(norm.GE)
norm.GM <- fitdist(data$GM, "norm") # Normal
summary(norm.GM)
norm.IBM <- fitdist(data$IBM, "norm") # Normal
summary(norm.IBM)
norm.MSOFT <- fitdist(data$MSOFT, "norm") # Normal
norm.GE <- fitdist(data$GE, "norm") # Normal
#summary(norm.GE)
norm.GM <- fitdist(data$GM, "norm") # Normal
#summary(norm.GM)
norm.IBM <- fitdist(data$IBM, "norm") # Normal
#summary(norm.IBM)
norm.MSOFT <- fitdist(data$MSOFT, "norm") # Normal
norm.MSOFT
norm.GE <- fitdist(data$GE, "norm") # Normal
#summary(norm.GE)
norm.GM <- fitdist(data$GM, "norm") # Normal
#summary(norm.GM)
norm.IBM <- fitdist(data$IBM, "norm") # Normal
#summary(norm.IBM)
norm.MSOFT <- fitdist(data$MSOFT, "norm") # Normal
summary(norm.MSOFT)
norm.GE <- fitdist(data$GE, "norm") # Normal
#summary(norm.GE)
norm.GM <- fitdist(data$GM, "norm") # Normal
#summary(norm.GM)
norm.IBM <- fitdist(data$IBM, "norm") # Normal
#summary(norm.IBM)
norm.MSOFT <- fitdist(data$MSOFT, "norm") # Normal
summary(norm.MSOFT)
fit_standard_t_MSOFT <- stdFit(data$MSOFT)
fit_skewed_t_MSOFT <- sstdFit(data$MSOFT)
fit_ged_MSOFT <- gedFit(data$MSOFT)
fit_skewed_ged_MSOFT <- sgedFit(data$MSOFT)
AIC_fit_standard_t_MSOFT = 2*(fit_standard_t_MSOFT$objective) + 2*(3)
BIC_fit_standard_t_MSOFT = 2*(fit_standard_t_MSOFT$objective) + (log(120))*(3)
AIC_fit_skewed_t_MSOFT = 2*(fit_skewed_t_MSOFT$minimum) + 2*(4)
BIC_fit_skewed_t_MSOFT = 2*(fit_skewed_t_MSOFT$minimum) + (log(120))*(4)
AIC_fit_ged_MSOFT = 2*(fit_ged_MSOFT$objective) + 2*(3)
BIC_fit_ged_MSOFT = 2*(fit_ged_MSOFT$objective) + (log(120))*(3)
AIC_fit_skewed_ged_MSOFT = 2*(fit_standard_t_MSOFT$objective) + 2*(4)
BIC_fit_skewed_ged_MSOFT = 2*(fit_standard_t_MSOFT$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_MSOFT$par)
cat("\n AIC is:", AIC_fit_standard_t_MSOFT)
cat("\n BIC is:", BIC_fit_standard_t_MSOFT)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_MSOFT$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_MSOFT)
cat("\n BIC is:", BIC_fit_skewed_t_MSOFT)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_MSOFT$par)
cat("\n AIC is:", AIC_fit_ged_MSOFT)
cat("\n BIC is:", BIC_fit_ged_MSOFT)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_MSOFT$par)
cat("\n AIC is:", AIC_fit_skewed_ged_MSOFT)
cat("\n BIC is:", BIC_fit_skewed_ged_MSOFT)
cat("\n")
norm.GE <- fitdist(data$GE, "norm") # Normal
summary(norm.GE)
fit_standard_t_GE <- stdFit(data$GE)
fit_skewed_t_GE <- sstdFit(data$GE)
fit_ged_GE <- gedFit(data$GE)
fit_skewed_ged_GE <- sgedFit(data$GE)
AIC_fit_standard_t_GE = 2*(fit_standard_t_GE$objective) + 2*(3)
BIC_fit_standard_t_GE = 2*(fit_standard_t_GE$objective) + (log(120))*(3)
AIC_fit_skewed_t_GE = 2*(fit_skewed_t_GE$minimum) + 2*(4)
BIC_fit_skewed_t_GE = 2*(fit_skewed_t_GE$minimum) + (log(120))*(4)
AIC_fit_ged_GE = 2*(fit_ged_GE$objective) + 2*(3)
BIC_fit_ged_GE = 2*(fit_ged_GE$objective) + (log(120))*(3)
AIC_fit_skewed_ged_GE = 2*(fit_standard_t_GE$objective) + 2*(4)
BIC_fit_skewed_ged_GE = 2*(fit_standard_t_GE$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_GE$par)
cat("\n AIC is:", AIC_fit_standard_t_GE)
cat("\n BIC is:", BIC_fit_standard_t_GE)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_GE$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_GE)
cat("\n BIC is:", BIC_fit_skewed_t_GE)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_GE$par)
cat("\n AIC is:", AIC_fit_ged_GE)
cat("\n BIC is:", BIC_fit_ged_GE)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_GE$par)
cat("\n AIC is:", AIC_fit_skewed_ged_GE)
cat("\n BIC is:", BIC_fit_skewed_ged_GE)
cat("\n")
norm.GM <- fitdist(data$GM, "norm") # Normal
summary(norm.GM)
fit_standard_t_GM <- stdFit(data$GM)
fit_skewed_t_GM <- sstdFit(data$GM)
fit_ged_GM <- gedFit(data$GM)
fit_skewed_ged_GM <- sgedFit(data$GM)
AIC_fit_standard_t_GM = 2*(fit_standard_t_GM$objective) + 2*(3)
BIC_fit_standard_t_GM = 2*(fit_standard_t_GM$objective) + (log(120))*(3)
AIC_fit_skewed_t_GM = 2*(fit_skewed_t_GM$minimum) + 2*(4)
BIC_fit_skewed_t_GM = 2*(fit_skewed_t_GM$minimum) + (log(120))*(4)
AIC_fit_ged_GM = 2*(fit_ged_GM$objective) + 2*(3)
BIC_fit_ged_GM = 2*(fit_ged_GM$objective) + (log(120))*(3)
AIC_fit_skewed_ged_GM = 2*(fit_standard_t_GM$objective) + 2*(4)
BIC_fit_skewed_ged_GM = 2*(fit_standard_t_GM$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_GM$par)
cat("\n AIC is:", AIC_fit_standard_t_GM)
cat("\n BIC is:", BIC_fit_standard_t_GM)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_GM$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_GM)
cat("\n BIC is:", BIC_fit_skewed_t_GM)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_GM$par)
cat("\n AIC is:", AIC_fit_ged_GM)
cat("\n BIC is:", BIC_fit_ged_GM)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_GM$par)
cat("\n AIC is:", AIC_fit_skewed_ged_GM)
cat("\n BIC is:", BIC_fit_skewed_ged_GM)
cat("\n")
norm.IBM <- fitdist(data$IBM, "norm") # Normal
summary(norm.IBM)
fit_standard_t_IBM <- stdFit(data$IBM)
fit_skewed_t_IBM <- sstdFit(data$IBM)
fit_ged_IBM <- gedFit(data$IBM)
fit_skewed_ged_IBM <- sgedFit(data$IBM)
AIC_fit_standard_t_IBM = 2*(fit_standard_t_IBM$objective) + 2*(3)
BIC_fit_standard_t_IBM = 2*(fit_standard_t_IBM$objective) + (log(120))*(3)
AIC_fit_skewed_t_IBM = 2*(fit_skewed_t_IBM$minimum) + 2*(4)
BIC_fit_skewed_t_IBM = 2*(fit_skewed_t_IBM$minimum) + (log(120))*(4)
AIC_fit_ged_IBM = 2*(fit_ged_IBM$objective) + 2*(3)
BIC_fit_ged_IBM = 2*(fit_ged_IBM$objective) + (log(120))*(3)
AIC_fit_skewed_ged_IBM = 2*(fit_standard_t_IBM$objective) + 2*(4)
BIC_fit_skewed_ged_IBM = 2*(fit_standard_t_IBM$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_IBM$par)
cat("\n AIC is:", AIC_fit_standard_t_IBM)
cat("\n BIC is:", BIC_fit_standard_t_IBM)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_IBM$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_IBM)
cat("\n BIC is:", BIC_fit_skewed_t_IBM)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_IBM$par)
cat("\n AIC is:", AIC_fit_ged_IBM)
cat("\n BIC is:", BIC_fit_ged_IBM)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_IBM$par)
cat("\n AIC is:", AIC_fit_skewed_ged_IBM)
cat("\n BIC is:", BIC_fit_skewed_ged_IBM)
cat("\n")
norm.IBM <- fitdist(data$IBM, "norm") # Normal
summary(norm.IBM)
fit_standard_t_IBM <- stdFit(data$IBM)
fit_skewed_t_IBM <- sstdFit(data$IBM)
fit_ged_IBM <- gedFit(data$IBM)
fit_skewed_ged_IBM <- sgedFit(data$IBM)
AIC_fit_standard_t_IBM = 2*(fit_standard_t_IBM$objective) + 2*(3)
BIC_fit_standard_t_IBM = 2*(fit_standard_t_IBM$objective) + (log(120))*(3)
AIC_fit_skewed_t_IBM = 2*(fit_skewed_t_IBM$minimum) + 2*(4)
BIC_fit_skewed_t_IBM = 2*(fit_skewed_t_IBM$minimum) + (log(120))*(4)
AIC_fit_ged_IBM = 2*(fit_ged_IBM$objective) + 2*(3)
BIC_fit_ged_IBM = 2*(fit_ged_IBM$objective) + (log(120))*(3)
AIC_fit_skewed_ged_IBM = 2*(fit_standard_t_IBM$objective) + 2*(4)
BIC_fit_skewed_ged_IBM = 2*(fit_standard_t_IBM$objective) + (log(120))*(4)
cat("\n Standard t fitting gives following parameters \n")
cat("\n", fit_standard_t_IBM$par)
cat("\n AIC is:", AIC_fit_standard_t_IBM)
cat("\n BIC is:", BIC_fit_standard_t_IBM)
cat("\n")
cat("\n Skewed t fitting gives following parameters \n")
cat("\n",fit_skewed_t_IBM$estimate)
cat("\n AIC is:", AIC_fit_skewed_t_IBM)
cat("\n BIC is:", BIC_fit_skewed_t_IBM)
cat("\n")
cat("\n GED fitting gives following parameters \n")
cat("\n",fit_ged_IBM$par)
cat("\n AIC is:", AIC_fit_ged_IBM)
cat("\n BIC is:", BIC_fit_ged_IBM)
cat("\n")
cat("\n Skewed GED fitting gives following parameters \n")
cat("\n",fit_skewed_ged_IBM$par)
cat("\n AIC is:", AIC_fit_skewed_ged_IBM)
cat("\n BIC is:", BIC_fit_skewed_ged_IBM)
cat("\n")
log_likelihood_sstd = function(data_col, x){
return(-sum(dsstd(data_col, x[1], x[2], x[3], x[4], log = TRUE)))
}
log_likelihood_ged = function(data_col, beta){
return(-sum(dged(data_col, mean = beta[1], sd = beta[2], nu = beta[3], log = TRUE)))
}
n = ncol(data)-2
for (i in 1:n) {
model_normal <- fitdistr(data[[i]], "normal")
initial = c(mean(data[[i]]), sd(data[[i]]), length(data[[i]]), 1)
model_sstd = optim(start, log_likelihood_sstd)
neg_log_likelihood_sstd = model_sstd$value
sstd_AIC = 2*neg_log_likelihood_sstd+2*length(model_sstd$par)
sstd_BIC = 2*neg_log_likelihood_sstd+log(length(data[[i]]))*length(model_sstd$par)
initial = c(mean(data[[i]]), sd(data[[i]]), 1)
model_ged = optim(start, log_likelihood_ged)
neg_log_likelihood_ged = model_ged$value
ged_AIC = 2*neg_log_likelihood_ged+2*length(model_ged$par)
ged_BIC = 2*neg_log_likelihood_ged+log(length(data[[i]]))*length(model_ged$par)
norm_AIC <- AIC(model_normal)
norm_BIC <- BIC(model_normal)
AIC <- c(norm_AIC,sstd_AIC,ged_AIC)
BIC <- c(norm_BIC,sstd_BIC,ged_BIC)
names(AIC) <- c("normal","sstd","ged")
names(BIC) <- c("normal","sstd","ged")
best_model_AIC <- c(model_normal, model_sstd, model_ged)[which.min(AIC)]
best_model_BIC <- c(model_normal, model_sstd, model_ged)[which.min(BIC)]
best_AIC <- which.min(AIC)
best_BIC <- which.min(BIC)
optimal_models_AIC_wise[[i]] <- list(AIC, best_AIC, best_model_AIC)
optimal_models_BIC_wise[[i]] <- list(BIC, best_BIC, best_model_BIC)
}
library(MASS)
library(fGarch)
log_likelihood_sstd = function(data_col, x){
return(-sum(dsstd(data_col, x[1], x[2], x[3], x[4], log = TRUE)))
}
log_likelihood_ged = function(data_col, beta){
return(-sum(dged(data_col, mean = beta[1], sd = beta[2], nu = beta[3], log = TRUE)))
}
n = ncol(data)-2
for (i in 1:n) {
model_normal <- fitdistr(data[[i]], "normal")
initial = c(mean(data[[i]]), sd(data[[i]]), length(data[[i]]), 1)
model_sstd = optim(start, log_likelihood_sstd)
neg_log_likelihood_sstd = model_sstd$value
sstd_AIC = 2*neg_log_likelihood_sstd+2*length(model_sstd$par)
sstd_BIC = 2*neg_log_likelihood_sstd+log(length(data[[i]]))*length(model_sstd$par)
initial = c(mean(data[[i]]), sd(data[[i]]), 1)
model_ged = optim(start, log_likelihood_ged)
neg_log_likelihood_ged = model_ged$value
ged_AIC = 2*neg_log_likelihood_ged+2*length(model_ged$par)
ged_BIC = 2*neg_log_likelihood_ged+log(length(data[[i]]))*length(model_ged$par)
norm_AIC <- AIC(model_normal)
norm_BIC <- BIC(model_normal)
AIC <- c(norm_AIC,sstd_AIC,ged_AIC)
BIC <- c(norm_BIC,sstd_BIC,ged_BIC)
names(AIC) <- c("normal","sstd","ged")
names(BIC) <- c("normal","sstd","ged")
best_model_AIC <- c(model_normal, model_sstd, model_ged)[which.min(AIC)]
best_model_BIC <- c(model_normal, model_sstd, model_ged)[which.min(BIC)]
best_AIC <- which.min(AIC)
best_BIC <- which.min(BIC)
optimal_models_AIC_wise[[i]] <- list(AIC, best_AIC, best_model_AIC)
optimal_models_BIC_wise[[i]] <- list(BIC, best_BIC, best_model_BIC)
}
library(MASS)
library(fGarch)
n = ncol(data)-2
for (i in 1:n) {
data_col = data[[i]]
log_likelihood_sstd = function(x){
return(-sum(dsstd(data_col, x[1], x[2], x[3], x[4], log = TRUE)))
}
log_likelihood_ged = function(beta){
return(-sum(dged(data_col, mean = beta[1], sd = beta[2], nu = beta[3], log = TRUE)))
}
model_normal <- fitdistr(data[[i]], "normal")
initial = c(mean(data[[i]]), sd(data[[i]]), length(data[[i]]), 1)
model_sstd = optim(start, log_likelihood_sstd)
neg_log_likelihood_sstd = model_sstd$value
sstd_AIC = 2*neg_log_likelihood_sstd+2*length(model_sstd$par)
sstd_BIC = 2*neg_log_likelihood_sstd+log(length(data[[i]]))*length(model_sstd$par)
initial = c(mean(data[[i]]), sd(data[[i]]), 1)
model_ged = optim(start, log_likelihood_ged)
neg_log_likelihood_ged = model_ged$value
ged_AIC = 2*neg_log_likelihood_ged+2*length(model_ged$par)
ged_BIC = 2*neg_log_likelihood_ged+log(length(data[[i]]))*length(model_ged$par)
norm_AIC <- AIC(model_normal)
norm_BIC <- BIC(model_normal)
AIC <- c(norm_AIC,sstd_AIC,ged_AIC)
BIC <- c(norm_BIC,sstd_BIC,ged_BIC)
names(AIC) <- c("normal","sstd","ged")
names(BIC) <- c("normal","sstd","ged")
best_model_AIC <- c(model_normal, model_sstd, model_ged)[which.min(AIC)]
best_model_BIC <- c(model_normal, model_sstd, model_ged)[which.min(BIC)]
best_AIC <- which.min(AIC)
best_BIC <- which.min(BIC)
optimal_models_AIC_wise[[i]] <- list(AIC, best_AIC, best_model_AIC)
optimal_models_BIC_wise[[i]] <- list(BIC, best_BIC, best_model_BIC)
}
library(copula)
install.packages("copula")
library(copula)
cop_t_dim3 = tCopula(dim = 3,
param = c(-0.6,0.75,0),
set.seed(5640),
dispstr = "un",
df = 1)
library(copula)
cop_t_dim3 = copula::tCopula(dim = 3,
param = c(-0.6,0.75,0),
set.seed(5640),
dispstr = "un",
df = 1)
library(copula)
cop_t_dim3 = tCopula(dim = 3,
param = c(-0.6,0.75,0),
set.seed(5640),
dispstr = "un",
df = 1)
?tCopula
library(copula)
cop_t_dim3 = tCopula(dim = 3,
param = c(-0.6,0.75,0),
set.seed(5640),
dispstr = "un",
df = 1)
library(copula)
cop_t_dim3 = tCopula(dim = 3,
param = c(-0.6,0.75,0),
dispstr = "un",
df = 1)
set.seed(5640)
rand_t_cop = rCopula(n = 500, copula = cop_t_dim3)
pairs(rand_t_cop)
cor(rand_t_cop)
cop_normal_dim3 = normalCopula(dim = 3, param = c(-0.6,0.75,0),
dispstr = "un")
mvdc_normal = mvdc(copula = cop_normal_dim3, margins = rep("exp",3),
paramMargins = list(list(rate=2), list(rate=3),
list(rate=4)))
set.seed(5640)
rand_mvdc = rMvdc(n = 1000, mvdc = mvdc_normal)
pairs(rand_mvdc)
par(mfrow = c(2,2))
for(i in 1:3) plot(density(rand_mvdc[,i]))
library(copula)
cop_t_dim3 = tCopula(dim = 3,
param = c(-0.6,0.75,0),
dispstr = "un",
df = 1)
set.seed(5640)
rand_t_cop = rCopula(n = 500, copula = cop_t_dim3)
pairs(rand_t_cop)
cor(rand_t_cop)
cop_normal_dim3 = normalCopula(dim = 3, param = c(-0.6,0.75,0),
dispstr = "un")
mvdc_normal = mvdc(copula = cop_normal_dim3, margins = rep("exp",3),
paramMargins = list(list(rate=2), list(rate=3),
list(rate=4)))
set.seed(5640)
rand_mvdc = rMvdc(n = 1000, mvdc = mvdc_normal)
pairs(rand_mvdc)
par(mfrow = c(2,2))
for(i in 1:3) plot(density(rand_mvdc[,i]))
library(copula)
cop_t_dim3 = tCopula(dim = 3,
param = c(-0.6,0.75,0),
dispstr = "un",
df = 1)
set.seed(5640)
rand_t_cop = rCopula(n = 500, copula = cop_t_dim3)
pairs(rand_t_cop)
cor(rand_t_cop)
cor.test(rand_t_cop[,1],rand_t_cop[,3])
data <- readxl::read_excel("CAPM-DATA-1.xlsx")
needed_data <- data[,2:3]
n <- nrow(needed_data)
updated_data <- cbind(rank(needed_data[,1])/(n+1), rank(needed_data[,2])/(n+1))
normal_copula = normalCopula(param = 0, dim = 2, dispstr = "un")
normal_fit = fitCopula(data = updated_data, copula = normal_copula, method = "ml")
normal_fit
t_copula = tCopula(param = 0, dim = 2, dispstr = "un", df = 5)
t_fit = fitCopula(data = updated_data, copula = t_copula, method = "ml")
t_copula = tCopula(param = 0, dim = 2, dispstr = "un", df = 5)
t_fit = fitCopula(data = updated_data, copula = t_copula, method = "ml")
t_fit
clayton_copula = archmCopula(family = "clayton", dim = 2, param = 2)
clayton_fit = fitCopula(data = updated_data, copula = clayton_copula, method = "ml")
clayton_fit
gumbel_copula = archmCopula(family = "gumbel", dim = 2, param = 2)
gumbel_fit = fitCopula(data = updated_data, copula = gumbel_copula, method = "ml")
gumbel_fit
# Finding Minimum by AIC measure
which.min(c(AIC(normal_fit),
AIC(t_fit),
AIC(clayton_fit),
AIC(gumbel_fit)))
# Finding Minimum by AIC measure
which.min(c(AIC(normal_fit),
AIC(t_fit),
AIC(clayton_fit),
AIC(gumbel_fit)))
# Finding Minimum by BIC measure
which.min(c(BIC(normal_fit),
BIC(t_fit),
BIC(clayton_fit),
BIC(gumbel_fit)))
library(quantmod)
library(dplyr)
install.packages("dplyr")
library(quantmod)
library(dplyr)
